extend type PaginatedResultInfo {
  moreAfter: Boolean!
}

type ImageTransformParams {
  height: ImageSizeTransform
  width: ImageSizeTransform
  keepAspectRatio: Boolean
}

type ImageQueryParams {
  small: ImageTransformParams
  medium: ImageTransformParams
}

type ProfileQueryParams {
  cover: ImageTransformParams
  thumbnail: ImageTransformParams
  metadataSource: AppId
}

type QueryParams {
  image: ImageQueryParams
  profile: ProfileQueryParams
  fxRateFor: SupportedFiatType
}

extend type Query {
  queryParams: QueryParams!
}

fragment InjectQueryParams on Query {
  queryParams @client {
    image {
      small @export(as: "imageSmallSize") {
        height
        width
        keepAspectRatio
      }
      medium @export(as: "imageMediumSize") {
        height
        width
        keepAspectRatio
      }
    }
    profile {
      cover @export(as: "profileCoverSize") {
        height
        width
        keepAspectRatio
      }
      thumbnail @export(as: "profilePictureSize") {
        height
        width
        keepAspectRatio
      }
      metadataSource @export(as: "profileMetadataSource")
    }
    fxRateFor @export(as: "fxRateFor")
  }
}

scalar ClientErc20Amount
scalar ProfileAttributes
scalar FollowPolicy
scalar CollectPolicy
scalar ReferencePolicy
scalar FollowStatus
scalar DecryptionCriteria
scalar PendingPublicationId

extend type Profile {
  ownedByMe: Boolean!
  attributesMap: ProfileAttributes!
  followPolicy: FollowPolicy!
  followStatus: FollowStatus
}

extend type Post {
  """
  @deprecated use `hasCollectedByMe` instead
  """
  hasOptimisticCollectedByMe: Boolean!
  """
  @deprecated use `isMirroredByMe` instead
  """
  isOptimisticMirroredByMe: Boolean!
  isMirroredByMe: Boolean!
  collectPolicy: CollectPolicy!
  referencePolicy: ReferencePolicy!
}

extend type Comment {
  """
  @deprecated use `hasCollectedByMe` instead
  """
  hasOptimisticCollectedByMe: Boolean!
  """
  @deprecated use `isMirroredByMe` instead
  """
  isOptimisticMirroredByMe: Boolean!
  isMirroredByMe: Boolean!
  collectPolicy: CollectPolicy!
  referencePolicy: ReferencePolicy!
}

type PendingPost {
  id: PendingPublicationId!
  content: String
  media: [Media!]
  profile: Profile!
  locale: Locale!
  mainContentFocus: PublicationMainFocus!
}

extend type RevenueAggregate {
  totalAmount: ClientErc20Amount!
}

extend type Post {
  decryptionCriteria: DecryptionCriteria
}

extend type Comment {
  decryptionCriteria: DecryptionCriteria
}

extend type PaginatedResultInfo {
  beforeCount: Int!
  moreAfter: Boolean!
}

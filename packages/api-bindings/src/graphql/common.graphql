fragment Erc20 on Erc20 {
  __typename
  name
  symbol
  decimals
  address
}

fragment Erc20Amount on Erc20Amount {
  __typename
  asset {
    ...Erc20
  }
  value
}

fragment ModuleFeeAmount on ModuleFeeAmount {
  __typename
  asset {
    ...Erc20
  }
  value
}

fragment ReferenceModule on ReferenceModule {
  __typename
  ... on FollowOnlyReferenceModuleSettings {
    contractAddress
  }
}

fragment FreeCollectModuleSettings on FreeCollectModuleSettings {
  __typename
  contractAddress
  followerOnly
}

fragment FeeCollectModuleSettings on FeeCollectModuleSettings {
  __typename
  amount {
    ...ModuleFeeAmount
  }
  contractAddress
  followerOnly
  recipient
  referralFee
}

fragment LimitedFeeCollectModuleSettings on LimitedFeeCollectModuleSettings {
  __typename
  amount {
    ...ModuleFeeAmount
  }
  collectLimit
  contractAddress
  followerOnly
  recipient
  referralFee
}

fragment LimitedTimedFeeCollectModuleSettings on LimitedTimedFeeCollectModuleSettings {
  __typename
  amount {
    ...ModuleFeeAmount
  }
  collectLimit
  contractAddress
  followerOnly
  endTimestamp
  recipient
  referralFee
}

fragment RevertCollectModuleSettings on RevertCollectModuleSettings {
  __typename
  contractAddress
}

fragment TimedFeeCollectModuleSettings on TimedFeeCollectModuleSettings {
  __typename
  amount {
    ...ModuleFeeAmount
  }
  contractAddress
  followerOnly
  endTimestamp
  recipient
  referralFee
}

fragment CollectModule on CollectModule {
  __typename

  ... on FreeCollectModuleSettings {
    ...FreeCollectModuleSettings
  }

  ... on FeeCollectModuleSettings {
    ...FeeCollectModuleSettings
  }

  ... on LimitedFeeCollectModuleSettings {
    ...LimitedFeeCollectModuleSettings
  }

  ... on LimitedTimedFeeCollectModuleSettings {
    ...LimitedTimedFeeCollectModuleSettings
  }

  ... on RevertCollectModuleSettings {
    ...RevertCollectModuleSettings
  }

  ... on TimedFeeCollectModuleSettings {
    ...TimedFeeCollectModuleSettings
  }
}

fragment Wallet on Wallet {
  __typename
  address
  defaultProfile {
    ...Profile
  }
}

fragment Media on Media {
  __typename
  url
  mimeType
}

fragment MediaSet on MediaSet {
  __typename
  original {
    ...Media
  }
}

fragment Metadata on MetadataOutput {
  __typename
  name
  description
  mainContentFocus
  content
  media {
    ...MediaSet
  }
  attributes {
    ...MetadataAttributeOutput
  }
}

fragment MetadataAttributeOutput on MetadataAttributeOutput {
  __typename
  traitType
  value
}

fragment PublicationStats on PublicationStats {
  __typename
  totalAmountOfMirrors
  totalUpvotes
  totalAmountOfCollects
  totalAmountOfComments
}

fragment MirrorBase on Mirror {
  __typename
  id
  stats {
    ...PublicationStats
  }
  metadata {
    ...Metadata
  }
  profile {
    ...Profile
  }
  collectModule {
    ...CollectModule
  }
  referenceModule {
    ...ReferenceModule
  }
  createdAt
  hidden
  isGated
  reaction(request: { profileId: $observerId })
  hasCollectedByMe(isFinalisedOnChain: true)
  canComment(profileId: $observerId) {
    result
  }
  canMirror(profileId: $observerId) {
    result
  }

  hasOptimisticCollectedByMe @client
  isOptimisticMirroredByMe @client # just to keep Publication type consistent, that will never be used
}

fragment Mirror on Mirror {
  __typename
  ...MirrorBase
  mirrorOf {
    ... on Post {
      ...Post
    }

    ... on Comment {
      ...Comment
    }
  }
}

fragment CommentBase on Comment {
  __typename
  id
  stats {
    ...PublicationStats
  }
  metadata {
    ...Metadata
  }
  profile {
    ...Profile
  }
  collectedBy {
    ...Wallet
  }
  collectModule {
    ...CollectModule
  }
  referenceModule {
    ...ReferenceModule
  }
  createdAt
  hidden
  isGated
  reaction(request: { profileId: $observerId })
  hasCollectedByMe(isFinalisedOnChain: true)
  canComment(profileId: $observerId) {
    result
  }
  canMirror(profileId: $observerId) {
    result
  }
  mirrors(by: $observerId)

  hasOptimisticCollectedByMe @client
  isOptimisticMirroredByMe @client
}

fragment CommonPaginatedResultInfo on PaginatedResultInfo {
  __typename
  prev
  next
  totalCount
}

fragment Comment on Comment {
  __typename
  ...CommentBase
  commentOn {
    ... on Post {
      ...Post
    }

    ... on Mirror {
      ...MirrorBase
    }

    ... on Comment {
      ...CommentBase
    }
  }
  mainPost {
    ... on Post {
      ...Post
    }

    ... on Mirror {
      ...MirrorBase
    }
  }
}

fragment Post on Post {
  __typename
  id
  stats {
    ...PublicationStats
  }
  metadata {
    ...Metadata
  }
  profile {
    ...Profile
  }
  collectedBy {
    ...Wallet
  }
  collectModule {
    ...CollectModule
  }
  referenceModule {
    ...ReferenceModule
  }
  createdAt
  hidden
  isGated
  reaction(request: { profileId: $observerId })
  hasCollectedByMe(isFinalisedOnChain: true)
  canComment(profileId: $observerId) {
    result
  }
  canMirror(profileId: $observerId) {
    result
  }
  mirrors(by: $observerId)

  hasOptimisticCollectedByMe @client
  isOptimisticMirroredByMe @client
}

fragment PendingPost on PendingPost {
  __typename
  id
  content
  media {
    ...Media
  }
  profile {
    ...Profile
  }
  locale
  mainContentFocus
}

fragment EIP712TypedDataDomain on EIP712TypedDataDomain {
  __typename
  name
  chainId
  version
  verifyingContract
}

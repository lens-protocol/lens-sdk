fragment Erc20Fields on Erc20 {
  __typename
  name
  symbol
  decimals
  address
}

fragment Erc20AmountFields on Erc20Amount {
  __typename
  asset {
    ...Erc20Fields
  }
  value
}

fragment ModuleFeeAmount on ModuleFeeAmount {
  __typename
  asset {
    ...Erc20Fields
  }
  value
}

fragment AaveFeeCollectModuleSettings on AaveFeeCollectModuleSettings {
  __typename
  amount {
    ...ModuleFeeAmount
  }
  collectLimitOptional: collectLimit
  contractAddress
  followerOnly
  endTimestampOptional: endTimestamp
  recipient
  referralFee
}

fragment Erc4626FeeCollectModuleSettings on ERC4626FeeCollectModuleSettings {
  __typename
  amount {
    ...ModuleFeeAmount
  }
  collectLimitOptional: collectLimit
  contractAddress
  followerOnly
  endTimestampOptional: endTimestamp
  recipient
  referralFee
  vault
}

fragment MultirecipientFeeCollectModuleSettings on MultirecipientFeeCollectModuleSettings {
  __typename
  amount {
    ...ModuleFeeAmount
  }
  collectLimitOptional: collectLimit
  contractAddress
  followerOnly
  endTimestampOptional: endTimestamp
  recipients {
    recipient
    split
  }
  referralFee
}

fragment UnknownCollectModuleSettings on UnknownCollectModuleSettings {
  __typename
  contractAddress
  collectModuleReturnData
}

fragment FreeCollectModuleSettings on FreeCollectModuleSettings {
  __typename
  contractAddress
  followerOnly
}

fragment FeeCollectModuleSettings on FeeCollectModuleSettings {
  __typename
  amount {
    ...ModuleFeeAmount
  }
  contractAddress
  followerOnly
  recipient
  referralFee
}

fragment LimitedFeeCollectModuleSettings on LimitedFeeCollectModuleSettings {
  __typename
  amount {
    ...ModuleFeeAmount
  }
  collectLimit
  contractAddress
  followerOnly
  recipient
  referralFee
}

fragment LimitedTimedFeeCollectModuleSettings on LimitedTimedFeeCollectModuleSettings {
  __typename
  amount {
    ...ModuleFeeAmount
  }
  collectLimit
  contractAddress
  followerOnly
  endTimestamp
  recipient
  referralFee
}

fragment MultirecipientFeeCollectModuleSettings on MultirecipientFeeCollectModuleSettings {
  __typename
  amount {
    ...ModuleFeeAmount
  }
  collectLimitOptional: collectLimit
  contractAddress
  followerOnly
  endTimestampOptional: endTimestamp
  recipients {
    recipient
    split
  }
  referralFee
}

fragment Erc4626FeeCollectModuleSettings on ERC4626FeeCollectModuleSettings {
  __typename
  amount {
    ...ModuleFeeAmount
  }
  collectLimitOptional: collectLimit
  contractAddress
  followerOnly
  endTimestampOptional: endTimestamp
  recipient
  referralFee
  vault
}

fragment AaveFeeCollectModuleSettings on AaveFeeCollectModuleSettings {
  __typename
  amount {
    ...ModuleFeeAmount
  }
  collectLimitOptional: collectLimit
  contractAddress
  followerOnly
  endTimestampOptional: endTimestamp
  recipient
  referralFee
}

fragment RevertCollectModuleSettings on RevertCollectModuleSettings {
  __typename
  contractAddress
}

fragment TimedFeeCollectModuleSettings on TimedFeeCollectModuleSettings {
  __typename
  amount {
    ...ModuleFeeAmount
  }
  contractAddress
  followerOnly
  endTimestamp
  recipient
  referralFee
}

fragment SimpleCollectModuleSettings on SimpleCollectModuleSettings {
  __typename
  contractAddress
  followerOnly
  feeOptional: fee {
    amount {
      ...ModuleFeeAmount
    }
    referralFee
    recipient
  }
  collectLimitOptional: collectLimit
  endTimestampOptional: endTimestamp
}

fragment Wallet on Wallet {
  __typename
  address
  defaultProfile {
    ...Profile
  }
}

fragment Media on Media {
  __typename
  altTag
  cover
  mimeType
  url
}

fragment MediaSet on MediaSet {
  __typename
  original {
    ...Media
  }
}

fragment MetadataOutput on MetadataOutput {
  __typename
  animatedUrl
  content
  contentWarning
  description
  image
  locale
  mainContentFocus
  name
  media {
    ...MediaSet
  }
  attributes {
    ...MetadataAttributeOutput
  }
  encryptionParams {
    ...EncryptionParamsOutput
  }
  tags
}

fragment MetadataAttributeOutput on MetadataAttributeOutput {
  __typename
  traitType
  value
}

fragment PublicationStats on PublicationStats {
  __typename
  totalAmountOfMirrors
  totalUpvotes
  totalDownvotes
  totalAmountOfCollects
  totalAmountOfComments
  commentsCount: commentsTotal(forSources: $sources)
}

fragment MirrorBase on Mirror {
  __typename
  id
  createdAt
  profile {
    ...Profile
  }
  hidden # this is currently used by HidePublication use case, keeping it for now
}

fragment Mirror on Mirror {
  __typename
  ...MirrorBase
  mirrorOf {
    ... on Post {
      ...Post
    }

    ... on Comment {
      ...Comment
    }
  }
}

fragment FollowOnlyReferenceModuleSettings on FollowOnlyReferenceModuleSettings {
  __typename
  contractAddress
}

fragment DegreesOfSeparationReferenceModuleSettings on DegreesOfSeparationReferenceModuleSettings {
  __typename
  contractAddress
  commentsRestricted
  degreesOfSeparation
  mirrorsRestricted
}

fragment UnknownReferenceModuleSettings on UnknownReferenceModuleSettings {
  __typename
  contractAddress
  referenceModuleReturnData
}

fragment CommentBase on Comment {
  __typename
  id
  stats {
    ...PublicationStats
  }
  metadata {
    ...MetadataOutput
  }
  profile {
    ...Profile
  }
  collectedBy {
    ...Wallet
  }
  collectModule {
    ... on AaveFeeCollectModuleSettings {
      ...AaveFeeCollectModuleSettings
    }

    ... on ERC4626FeeCollectModuleSettings {
      ...Erc4626FeeCollectModuleSettings
    }

    ... on MultirecipientFeeCollectModuleSettings {
      ...MultirecipientFeeCollectModuleSettings
    }

    ... on UnknownCollectModuleSettings {
      ...UnknownCollectModuleSettings
    }

    ... on FreeCollectModuleSettings {
      ...FreeCollectModuleSettings
    }

    ... on FeeCollectModuleSettings {
      ...FeeCollectModuleSettings
    }

    ... on LimitedFeeCollectModuleSettings {
      ...LimitedFeeCollectModuleSettings
    }

    ... on LimitedTimedFeeCollectModuleSettings {
      ...LimitedTimedFeeCollectModuleSettings
    }

    ... on RevertCollectModuleSettings {
      ...RevertCollectModuleSettings
    }

    ... on TimedFeeCollectModuleSettings {
      ...TimedFeeCollectModuleSettings
    }

    ... on SimpleCollectModuleSettings {
      ...SimpleCollectModuleSettings
    }
  }
  collectNftAddress
  referenceModule {
    ... on FollowOnlyReferenceModuleSettings {
      ...FollowOnlyReferenceModuleSettings
    }

    ... on DegreesOfSeparationReferenceModuleSettings {
      ...DegreesOfSeparationReferenceModuleSettings
    }

    ... on UnknownReferenceModuleSettings {
      ...UnknownReferenceModuleSettings
    }
  }
  createdAt
  hidden
  isGated
  reaction(request: { profileId: $observerId })
  hasCollectedByMe
  canComment(profileId: $observerId) {
    result
  }
  canMirror(profileId: $observerId) {
    result
  }
  canObserverDecrypt: canDecrypt(profileId: $observerId) {
    result
    reasons
  }
  mirrors(by: $observerId)

  hasOptimisticCollectedByMe @client
  isOptimisticMirroredByMe @client
  isMirroredByMe @client
  collectPolicy @client
  referencePolicy @client
  decryptionCriteria @client
}

fragment PaginatedResultInfo on PaginatedResultInfo {
  __typename
  beforeCount @client
  moreAfter @client
  prev
  next
  totalCount
}

fragment Comment on Comment {
  __typename
  ...CommentBase
  commentOn {
    ... on Post {
      ...Post
    }

    # we do not want to promote comments on mirrors, should we remove this?
    ... on Mirror {
      ...MirrorBase
    }

    ... on Comment {
      ...CommentBase
    }
  }
  mainPost {
    ... on Post {
      ...Post
    }

    # we do not want to promote comments on mirrors, should we remove this?
    ... on Mirror {
      ...MirrorBase
    }
  }
  firstComment {
    ...CommentBase
  }
}

fragment Post on Post {
  __typename
  id
  stats {
    ...PublicationStats
  }
  metadata {
    ...MetadataOutput
  }
  profile {
    ...Profile
  }
  collectedBy {
    ...Wallet
  }
  collectModule {
    ... on AaveFeeCollectModuleSettings {
      ...AaveFeeCollectModuleSettings
    }

    ... on ERC4626FeeCollectModuleSettings {
      ...Erc4626FeeCollectModuleSettings
    }

    ... on MultirecipientFeeCollectModuleSettings {
      ...MultirecipientFeeCollectModuleSettings
    }

    ... on UnknownCollectModuleSettings {
      ...UnknownCollectModuleSettings
    }

    ... on FreeCollectModuleSettings {
      ...FreeCollectModuleSettings
    }

    ... on FeeCollectModuleSettings {
      ...FeeCollectModuleSettings
    }

    ... on LimitedFeeCollectModuleSettings {
      ...LimitedFeeCollectModuleSettings
    }

    ... on LimitedTimedFeeCollectModuleSettings {
      ...LimitedTimedFeeCollectModuleSettings
    }

    ... on RevertCollectModuleSettings {
      ...RevertCollectModuleSettings
    }

    ... on TimedFeeCollectModuleSettings {
      ...TimedFeeCollectModuleSettings
    }

    ... on SimpleCollectModuleSettings {
      ...SimpleCollectModuleSettings
    }
  }
  collectNftAddress
  referenceModule {
    ... on FollowOnlyReferenceModuleSettings {
      ...FollowOnlyReferenceModuleSettings
    }

    ... on DegreesOfSeparationReferenceModuleSettings {
      ...DegreesOfSeparationReferenceModuleSettings
    }

    ... on UnknownReferenceModuleSettings {
      ...UnknownReferenceModuleSettings
    }
  }
  createdAt
  hidden
  isGated
  reaction(request: { profileId: $observerId })
  hasCollectedByMe
  canComment(profileId: $observerId) {
    result
  }
  canMirror(profileId: $observerId) {
    result
  }
  mirrors(by: $observerId)
  canObserverDecrypt: canDecrypt(profileId: $observerId) {
    result
    reasons
  }

  hasOptimisticCollectedByMe @client
  isOptimisticMirroredByMe @client
  isMirroredByMe @client
  collectPolicy @client
  referencePolicy @client
  decryptionCriteria @client
}

fragment PendingPost on PendingPost {
  __typename
  id
  content
  media {
    ...Media
  }
  profile {
    ...Profile
  }
  locale
  mainContentFocus
}

fragment EIP712TypedDataDomain on EIP712TypedDataDomain {
  __typename
  name
  chainId
  version
  verifyingContract
}

# queries
query Profile($request: SingleProfileQueryRequest!, $observerId: ProfileId) {
  result: profile(request: $request) {
    ...Profile
  }
}

fragment ProfileStats on ProfileStats {
  __typename
  totalCollects
  totalComments
  totalFollowers
  totalFollowing
  totalMirrors
  totalPosts
  totalPublications

  commentsTotal(forSources: $sources)
  postsTotal(forSources: $sources)
  mirrorsTotal(forSources: $sources)
  publicationsTotal(forSources: $sources)
}

query ProfileStats($request: SingleProfileQueryRequest!, $sources: [Sources!]!) {
  result: profile(request: $request) {
    stats {
      ...ProfileStats
    }
  }
}

query Profiles($request: ProfileQueryRequest!, $observerId: ProfileId) {
  result: profiles(request: $request) {
    items {
      ...Profile
    }

    pageInfo {
      ...CommonPaginatedResultInfo
    }
  }
}

query RecommendedProfiles($options: RecommendedProfileOptions!, $observerId: ProfileId) {
  result: recommendedProfiles(options: $options) {
    ...Profile
  }
}

query MutualFollowersProfiles(
  $request: MutualFollowersProfilesQueryRequest!
  $observerId: ProfileId
) {
  result: mutualFollowersProfiles(request: $request) {
    items {
      ...Profile
    }

    pageInfo {
      ...CommonPaginatedResultInfo
    }
  }
}

query DoesFollow($request: DoesFollowRequest!) {
  result: doesFollow(request: $request) {
    follows
    followerAddress
    profileId
    isFinalisedOnChain
    __typename
  }
}

query Following($request: FollowingRequest!, $observerId: ProfileId) {
  result: following(request: $request) {
    items {
      ...Following
    }

    pageInfo {
      ...CommonPaginatedResultInfo
    }
  }
}

query Followers($request: FollowersRequest!, $observerId: ProfileId) {
  result: followers(request: $request) {
    items {
      ...Follower
    }

    pageInfo {
      ...CommonPaginatedResultInfo
    }
  }
}

query FollowerNftOwnedTokenIds($request: FollowerNftOwnedTokenIdsRequest!) {
  result: followerNftOwnedTokenIds(request: $request) {
    __typename
    followerNftAddress
    tokensIds
  }
}

query PendingApprovalFollows($request: PendingApprovalFollowsRequest!, $observerId: ProfileId) {
  result: pendingApprovalFollows(request: $request) {
    items {
      ...Profile
    }

    pageInfo {
      ...CommonPaginatedResultInfo
    }
  }
}

query ProfileInterests {
  result: profileInterests
}

# mutations
mutation CreateProfile($request: CreateProfileRequest!) {
  result: createProfile(request: $request) {
    ... on RelayerResult {
      ...RelayerResult
    }

    ... on RelayError {
      ...RelayError
    }
  }
}

fragment BurnProfileTypedData on CreateBurnProfileBroadcastItemResult {
  id
  expiresAt
  typedData {
    types {
      BurnWithSig {
        name
        type
      }
    }
    domain {
      name
      chainId
      version
      verifyingContract
    }
    value {
      nonce
      deadline
      tokenId
    }
  }
}

mutation CreateBurnProfileTypedData($request: BurnProfileRequest!, $options: TypedDataOptions) {
  result: createBurnProfileTypedData(request: $request, options: $options) {
    ...BurnProfileTypedData
  }
}

fragment SetDefaultProfileTypedData on SetDefaultProfileBroadcastItemResult {
  id
  expiresAt
  typedData {
    types {
      SetDefaultProfileWithSig {
        name
        type
      }
    }
    domain {
      name
      chainId
      version
      verifyingContract
    }
    value {
      nonce
      deadline
      wallet
      profileId
    }
  }
}

mutation CreateSetDefaultProfileTypedData(
  $request: CreateSetDefaultProfileRequest!
  $options: TypedDataOptions
) {
  result: createSetDefaultProfileTypedData(request: $request, options: $options) {
    ...SetDefaultProfileTypedData
  }
}

fragment SetProfileImageURITypedData on CreateSetProfileImageUriBroadcastItemResult {
  id
  expiresAt
  typedData {
    types {
      SetProfileImageURIWithSig {
        name
        type
      }
    }
    domain {
      name
      chainId
      version
      verifyingContract
    }
    value {
      nonce
      deadline
      profileId
      imageURI
    }
  }
}

mutation CreateSetProfileImageURITypedData(
  $request: UpdateProfileImageRequest!
  $options: TypedDataOptions
) {
  result: createSetProfileImageURITypedData(request: $request, options: $options) {
    ...SetProfileImageURITypedData
  }
}

mutation CreateSetProfileImageURIViaDispatcher($request: UpdateProfileImageRequest!) {
  result: createSetProfileImageURIViaDispatcher(request: $request) {
    __typename

    ... on RelayerResult {
      ...RelayerResult
    }

    ... on RelayError {
      ...RelayError
    }
  }
}

fragment SetProfileMetadataTypedData on CreateSetProfileMetadataURIBroadcastItemResult {
  id
  expiresAt
  typedData {
    types {
      SetProfileMetadataURIWithSig {
        name
        type
      }
    }
    domain {
      name
      chainId
      version
      verifyingContract
    }
    value {
      nonce
      deadline
      profileId
      metadata
    }
  }
}

mutation CreateSetProfileMetadataTypedData(
  $request: CreatePublicSetProfileMetadataURIRequest!
  $options: TypedDataOptions
) {
  result: createSetProfileMetadataTypedData(request: $request, options: $options) {
    ...SetProfileMetadataTypedData
  }
}

mutation CreateSetProfileMetadataViaDispatcher(
  $request: CreatePublicSetProfileMetadataURIRequest!
) {
  result: createSetProfileMetadataViaDispatcher(request: $request) {
    __typename

    ... on RelayerResult {
      ...RelayerResult
    }

    ... on RelayError {
      ...RelayError
    }
  }
}

fragment SetDispatcherTypedData on CreateSetDispatcherBroadcastItemResult {
  id
  expiresAt
  typedData {
    types {
      SetDispatcherWithSig {
        name
        type
      }
    }
    domain {
      name
      chainId
      version
      verifyingContract
    }
    value {
      nonce
      deadline
      profileId
      dispatcher
    }
  }
}

mutation CreateSetDispatcherTypedData($request: SetDispatcherRequest!, $options: TypedDataOptions) {
  result: createSetDispatcherTypedData(request: $request, options: $options) {
    ...SetDispatcherTypedData
  }
}

fragment FollowTypedData on CreateFollowBroadcastItemResult {
  id
  expiresAt
  typedData {
    types {
      FollowWithSig {
        name
        type
      }
    }
    domain {
      ...EIP712TypedDataDomain
    }
    value {
      nonce
      deadline
      profileIds
      datas
    }
  }
}

mutation CreateFollowTypedData($request: FollowRequest!, $options: TypedDataOptions) {
  result: createFollowTypedData(request: $request, options: $options) {
    ...FollowTypedData
  }
}

fragment UnfollowTypedData on CreateUnfollowBroadcastItemResult {
  id
  expiresAt
  typedData {
    types {
      BurnWithSig {
        name
        type
      }
    }
    domain {
      ...EIP712TypedDataDomain
    }
    value {
      nonce
      deadline
      tokenId
    }
  }
}

mutation CreateUnfollowTypedData($request: UnfollowRequest!, $options: TypedDataOptions) {
  result: createUnfollowTypedData(request: $request, options: $options) {
    ...UnfollowTypedData
  }
}

fragment SetFollowModuleTypedData on CreateSetFollowModuleBroadcastItemResult {
  id
  expiresAt
  typedData {
    types {
      SetFollowModuleWithSig {
        name
        type
      }
    }
    domain {
      name
      chainId
      version
      verifyingContract
    }
    value {
      nonce
      deadline
      profileId
      followModule
      followModuleInitData
    }
  }
}

mutation CreateSetFollowModuleTypedData(
  $request: CreateSetFollowModuleRequest!
  $options: TypedDataOptions
) {
  result: createSetFollowModuleTypedData(request: $request, options: $options) {
    ...SetFollowModuleTypedData
  }
}

fragment SetFollowNFTUriTypedData on CreateSetFollowNFTUriBroadcastItemResult {
  id
  expiresAt
  typedData {
    types {
      SetFollowNFTURIWithSig {
        name
        type
      }
    }
    domain {
      name
      chainId
      version
      verifyingContract
    }
    value {
      nonce
      profileId
      deadline
      followNFTURI
    }
  }
}

mutation CreateSetFollowNFTUriTypedData(
  $request: CreateSetFollowNFTUriRequest!
  $options: TypedDataOptions
) {
  result: createSetFollowNFTUriTypedData(request: $request, options: $options) {
    ...SetFollowNFTUriTypedData
  }
}

mutation AddProfileInterest($request: AddProfileInterestsRequest!) {
  addProfileInterests(request: $request)
}

mutation RemoveProfileInterest($request: RemoveProfileInterestsRequest!) {
  removeProfileInterests(request: $request)
}

mutation DismissRecommendedProfiles($request: DismissRecommendedProfilesRequest!) {
  dismissRecommendedProfiles(request: $request)
}

# fragments
fragment ProfileStats on ProfileStats {
  __typename
  totalCollects
  totalComments
  totalFollowers
  totalFollowing
  totalMirrors
  totalPosts
  totalPublications

  commentsTotal(forSources: $sources)
  postsTotal(forSources: $sources)
  mirrorsTotal(forSources: $sources)
  publicationsTotal(forSources: $sources)
}

# queries
query Profile($request: SingleProfileQueryRequest!, $observerId: ProfileId) {
  result: profile(request: $request) {
    ...Profile
  }
}

query ProfileStats($request: SingleProfileQueryRequest!, $sources: [Sources!]!) {
  result: profile(request: $request) {
    stats {
      ...ProfileStats
    }
  }
}

query Profiles($request: ProfileQueryRequest!, $observerId: ProfileId) {
  result: profiles(request: $request) {
    items {
      ...Profile
    }

    pageInfo {
      ...CommonPaginatedResultInfo
    }
  }
}

query RecommendedProfiles($observerId: ProfileId) {
  result: recommendedProfiles {
    ...Profile
  }
}

query MutualFollowersProfiles(
  $request: MutualFollowersProfilesQueryRequest!
  $observerId: ProfileId
) {
  result: mutualFollowersProfiles(request: $request) {
    items {
      ...Profile
    }

    pageInfo {
      ...CommonPaginatedResultInfo
    }
  }
}

query DoesFollow($request: DoesFollowRequest!) {
  result: doesFollow(request: $request) {
    follows
    followerAddress
    profileId
    isFinalisedOnChain
    __typename
  }
}

query Following($request: FollowingRequest!, $observerId: ProfileId) {
  result: following(request: $request) {
    items {
      ...Following
    }

    pageInfo {
      ...CommonPaginatedResultInfo
    }
  }
}

query Followers($request: FollowersRequest!, $observerId: ProfileId) {
  result: followers(request: $request) {
    items {
      ...Follower
    }

    pageInfo {
      ...CommonPaginatedResultInfo
    }
  }
}

query FollowerNftOwnedTokenIds($request: FollowerNftOwnedTokenIdsRequest!) {
  result: followerNftOwnedTokenIds(request: $request) {
    __typename
    followerNftAddress
    tokensIds
  }
}

query PendingApprovalFollows($request: PendingApprovalFollowsRequest!, $observerId: ProfileId) {
  result: pendingApprovalFollows(request: $request) {
    items {
      ...Profile
    }

    pageInfo {
      ...CommonPaginatedResultInfo
    }
  }
}

query ProfileInterests {
  result: profileInterests
}

# mutations
mutation CreateProfile($request: CreateProfileRequest!) {
  result: createProfile(request: $request) {
    ... on RelayerResult {
      ...RelayerResult
    }

    ... on RelayError {
      ...RelayError
    }
  }
}

mutation CreateBurnProfileTypedData($request: BurnProfileRequest!, $options: TypedDataOptions) {
  result: createBurnProfileTypedData(request: $request, options: $options) {
    id
    expiresAt
    typedData {
      types {
        BurnWithSig {
          name
          type
        }
      }
      domain {
        name
        chainId
        version
        verifyingContract
      }
      value {
        nonce
        deadline
        tokenId
      }
    }
  }
}

mutation CreateSetDefaultProfileTypedData(
  $request: CreateSetDefaultProfileRequest!
  $options: TypedDataOptions
) {
  result: createSetDefaultProfileTypedData(request: $request, options: $options) {
    id
    expiresAt
    typedData {
      types {
        SetDefaultProfileWithSig {
          name
          type
        }
      }
      domain {
        name
        chainId
        version
        verifyingContract
      }
      value {
        nonce
        deadline
        wallet
        profileId
      }
    }
  }
}

mutation CreateSetProfileImageURITypedData(
  $request: UpdateProfileImageRequest!
  $options: TypedDataOptions
) {
  result: createSetProfileImageURITypedData(request: $request, options: $options) {
    id
    expiresAt
    typedData {
      types {
        SetProfileImageURIWithSig {
          name
          type
        }
      }
      domain {
        name
        chainId
        version
        verifyingContract
      }
      value {
        nonce
        deadline
        profileId
        imageURI
      }
    }
  }
}

mutation CreateSetProfileImageURIViaDispatcher($request: UpdateProfileImageRequest!) {
  result: createSetProfileImageURIViaDispatcher(request: $request) {
    __typename

    ... on RelayerResult {
      ...RelayerResult
    }

    ... on RelayError {
      ...RelayError
    }
  }
}

mutation CreateSetProfileMetadataTypedData(
  $request: CreatePublicSetProfileMetadataURIRequest!
  $options: TypedDataOptions
) {
  result: createSetProfileMetadataTypedData(request: $request, options: $options) {
    id
    expiresAt
    typedData {
      types {
        SetProfileMetadataURIWithSig {
          name
          type
        }
      }
      domain {
        name
        chainId
        version
        verifyingContract
      }
      value {
        nonce
        deadline
        profileId
        metadata
      }
    }
  }
}

mutation CreateSetProfileMetadataViaDispatcher(
  $request: CreatePublicSetProfileMetadataURIRequest!
) {
  result: createSetProfileMetadataViaDispatcher(request: $request) {
    __typename

    ... on RelayerResult {
      ...RelayerResult
    }

    ... on RelayError {
      ...RelayError
    }
  }
}

mutation CreateSetDispatcherTypedData($request: SetDispatcherRequest!, $options: TypedDataOptions) {
  result: createSetDispatcherTypedData(request: $request, options: $options) {
    id
    expiresAt
    typedData {
      types {
        SetDispatcherWithSig {
          name
          type
        }
      }
      domain {
        name
        chainId
        version
        verifyingContract
      }
      value {
        nonce
        deadline
        profileId
        dispatcher
      }
    }
  }
}

mutation CreateFollowTypedData($request: FollowRequest!, $options: TypedDataOptions) {
  result: createFollowTypedData(request: $request, options: $options) {
    id
    expiresAt
    typedData {
      types {
        FollowWithSig {
          name
          type
        }
      }
      domain {
        ...EIP712TypedDataDomain
      }
      value {
        nonce
        deadline
        profileIds
        datas
      }
    }
  }
}

mutation CreateUnfollowTypedData($request: UnfollowRequest!, $options: TypedDataOptions) {
  result: createUnfollowTypedData(request: $request, options: $options) {
    id
    expiresAt
    typedData {
      types {
        BurnWithSig {
          name
          type
        }
      }
      domain {
        ...EIP712TypedDataDomain
      }
      value {
        nonce
        deadline
        tokenId
      }
    }
  }
}

mutation CreateSetFollowModuleTypedData(
  $request: CreateSetFollowModuleRequest!
  $options: TypedDataOptions
) {
  result: createSetFollowModuleTypedData(request: $request, options: $options) {
    id
    expiresAt
    typedData {
      types {
        SetFollowModuleWithSig {
          name
          type
        }
      }
      domain {
        name
        chainId
        version
        verifyingContract
      }
      value {
        nonce
        deadline
        profileId
        followModule
        followModuleInitData
      }
    }
  }
}

mutation CreateSetFollowNFTUriTypedData(
  $request: CreateSetFollowNFTUriRequest!
  $options: TypedDataOptions
) {
  result: createSetFollowNFTUriTypedData(request: $request, options: $options) {
    id
    expiresAt
    typedData {
      types {
        SetFollowNFTURIWithSig {
          name
          type
        }
      }
      domain {
        name
        chainId
        version
        verifyingContract
      }
      value {
        nonce
        profileId
        deadline
        followNFTURI
      }
    }
  }
}

mutation AddProfileInterest($request: AddProfileInterestsRequest!) {
  addProfileInterests(request: $request)
}

mutation RemoveProfileInterest($request: RemoveProfileInterestsRequest!) {
  removeProfileInterests(request: $request)
}

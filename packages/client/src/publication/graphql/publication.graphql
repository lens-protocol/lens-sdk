#fragments
fragment PublicationStats on PublicationStats {
  __typename
  totalAmountOfMirrors
  totalAmountOfCollects
  totalAmountOfComments
  totalUpvotes
  totalDownvotes
  commentsTotal(forSources: $sources)
}

fragment MediaOutput on MediaOutput {
  altTag
  cover
  item
  source
  type
}

fragment PublicMediaResults on PublicMediaResults {
  media {
    ...MediaOutput
  }
  signedUrl
}

fragment CreatePostBroadcastItemResult on CreatePostBroadcastItemResult {
  id
  expiresAt
  typedData {
    types {
      PostWithSig {
        name
        type
      }
    }
    domain {
      ...EIP712TypedDataDomain
    }
    value {
      nonce
      deadline
      profileId
      contentURI
      collectModule
      collectModuleInitData
      referenceModule
      referenceModuleInitData
    }
  }
}

fragment CreateCommentBroadcastItemResult on CreateCommentBroadcastItemResult {
  id
  expiresAt
  typedData {
    types {
      CommentWithSig {
        name
        type
      }
    }
    domain {
      ...EIP712TypedDataDomain
    }
    value {
      nonce
      deadline
      profileId
      contentURI
      profileIdPointed
      pubIdPointed
      collectModule
      collectModuleInitData
      referenceModuleData
      referenceModule
      referenceModuleInitData
    }
  }
}

fragment CreateMirrorBroadcastItemResult on CreateMirrorBroadcastItemResult {
  id
  expiresAt
  typedData {
    types {
      MirrorWithSig {
        name
        type
      }
    }
    domain {
      ...EIP712TypedDataDomain
    }
    value {
      nonce
      deadline
      profileId
      profileIdPointed
      pubIdPointed
      referenceModuleData
      referenceModule
      referenceModuleInitData
    }
  }
}

fragment CreateCollectBroadcastItemResult on CreateCollectBroadcastItemResult {
  id
  expiresAt
  typedData {
    types {
      CollectWithSig {
        name
        type
      }
    }
    domain {
      ...EIP712TypedDataDomain
    }
    value {
      nonce
      deadline
      profileId
      pubId
      data
    }
  }
}

# queries
query Publication($request: PublicationQueryRequest!, $observerId: ProfileId) {
  result: publication(request: $request) {
    ... on Post {
      ...Post
    }

    ... on Mirror {
      ...Mirror
    }

    ... on Comment {
      ...Comment
    }
  }
}

query PublicationStats($request: PublicationQueryRequest!, $sources: [Sources!]!) {
  result: publication(request: $request) {
    ... on Post {
      stats {
        ...PublicationStats
      }
    }

    ... on Mirror {
      stats {
        ...PublicationStats
      }
    }

    ... on Comment {
      stats {
        ...PublicationStats
      }
    }
  }
}

query Publications($request: PublicationsQueryRequest!, $observerId: ProfileId) {
  result: publications(request: $request) {
    items {
      ... on Post {
        ...Post
      }

      ... on Mirror {
        ...Mirror
      }

      ... on Comment {
        ...Comment
      }
    }
    pageInfo {
      ...CommonPaginatedResultInfo
    }
  }
}

query ValidatePublicationMetadata($metadata: PublicationMetadataV2Input!) {
  validatePublicationMetadata(request: { metadatav2: $metadata }) {
    __typename
    valid
    reason
  }
}

query WhoCollectedPublication($request: WhoCollectedPublicationRequest!, $observerId: ProfileId) {
  result: whoCollectedPublication(request: $request) {
    items {
      ...Wallet
    }

    pageInfo {
      ...CommonPaginatedResultInfo
    }
  }
}

query ProfilePublicationsForSale(
  $request: ProfilePublicationsForSaleRequest!
  $observerId: ProfileId
) {
  result: profilePublicationsForSale(request: $request) {
    items {
      ... on Post {
        ...Post
      }
      ... on Comment {
        ...Comment
      }
    }

    pageInfo {
      ...CommonPaginatedResultInfo
    }
  }
}

query PublicationMetadataStatus($request: GetPublicationMetadataStatusRequest!) {
  result: publicationMetadataStatus(request: $request) {
    __typename
    reason
    status
  }
}

# mutations
mutation CreatePostTypedData($request: CreatePublicPostRequest!, $options: TypedDataOptions) {
  result: createPostTypedData(request: $request, options: $options) {
    ...CreatePostBroadcastItemResult
  }
}

mutation CreatePostViaDispatcher($request: CreatePublicPostRequest!) {
  result: createPostViaDispatcher(request: $request) {
    ... on RelayerResult {
      ...RelayerResult
    }

    ... on RelayError {
      ...RelayError
    }
  }
}

mutation CreateCommentTypedData($request: CreatePublicCommentRequest!, $options: TypedDataOptions) {
  result: createCommentTypedData(request: $request, options: $options) {
    ...CreateCommentBroadcastItemResult
  }
}

mutation CreateCommentViaDispatcher($request: CreatePublicCommentRequest!) {
  result: createCommentViaDispatcher(request: $request) {
    ... on RelayerResult {
      ...RelayerResult
    }

    ... on RelayError {
      ...RelayError
    }
  }
}

mutation CreateMirrorTypedData($request: CreateMirrorRequest!, $options: TypedDataOptions) {
  result: createMirrorTypedData(request: $request, options: $options) {
    ...CreateMirrorBroadcastItemResult
  }
}

mutation CreateMirrorViaDispatcher($request: CreateMirrorRequest!) {
  result: createMirrorViaDispatcher(request: $request) {
    ... on RelayerResult {
      ...RelayerResult
    }

    ... on RelayError {
      ...RelayError
    }
  }
}

mutation CreateCollectTypedData($request: CreateCollectRequest!, $options: TypedDataOptions) {
  result: createCollectTypedData(request: $request, options: $options) {
    ...CreateCollectBroadcastItemResult
  }
}

mutation CreateAttachMediaData($request: PublicMediaRequest!) {
  result: createAttachMediaData(request: $request) {
    ...PublicMediaResults
  }
}

mutation HidePublication($request: HidePublicationRequest!) {
  hidePublication(request: $request)
}

mutation ReportPublication($request: ReportPublicationRequest!) {
  reportPublication(request: $request)
}

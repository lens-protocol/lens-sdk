fragment ProfileManager on ProfilesManagedResult {
  address
}

fragment CreateProfileWithHandleErrorResult on CreateProfileWithHandleErrorResult {
  reason
}

fragment CreateOnchainSetProfileMetadataBroadcastItemResult on CreateOnchainSetProfileMetadataBroadcastItemResult {
  id
  expiresAt
  typedData {
    types {
      SetProfileMetadataURI {
        name
        type
      }
    }
    domain {
      ...EIP712TypedDataDomain
    }
    value {
      nonce
      deadline
    }
  }
}

fragment CreateChangeProfileManagersBroadcastItemResult on CreateChangeProfileManagersBroadcastItemResult {
  id
  expiresAt
  typedData {
    types {
      ChangeDelegatedExecutorsConfig {
        name
        type
      }
    }
    domain {
      ...EIP712TypedDataDomain
    }
    value {
      nonce
      deadline
    }
  }
}

fragment CreateBlockProfilesBroadcastItemResult on CreateBlockProfilesBroadcastItemResult {
  id
  expiresAt
  typedData {
    types {
      SetBlockStatus {
        name
        type
      }
    }
    domain {
      ...EIP712TypedDataDomain
    }
    value {
      nonce
      deadline
    }
  }
}

fragment CreateUnblockProfilesBroadcastItemResult on CreateUnblockProfilesBroadcastItemResult {
  id
  expiresAt
  typedData {
    types {
      SetBlockStatus {
        name
        type
      }
    }
    domain {
      ...EIP712TypedDataDomain
    }
    value {
      nonce
      deadline
    }
  }
}

fragment CreateFollowBroadcastItemResult on CreateFollowBroadcastItemResult {
  id
  expiresAt
  typedData {
    types {
      Follow {
        name
        type
      }
    }
    domain {
      ...EIP712TypedDataDomain
    }
    value {
      nonce
      deadline
    }
  }
}

fragment CreateUnfollowBroadcastItemResult on CreateUnfollowBroadcastItemResult {
  id
  expiresAt
  typedData {
    types {
      Unfollow {
        name
        type
      }
    }
    domain {
      ...EIP712TypedDataDomain
    }
    value {
      nonce
      deadline
    }
  }
}

fragment CreateSetFollowModuleBroadcastItemResult on CreateSetFollowModuleBroadcastItemResult {
  id
  expiresAt
  typedData {
    types {
      SetFollowModule {
        name
        type
      }
    }
    domain {
      ...EIP712TypedDataDomain
    }
    value {
      nonce
      deadline
    }
  }
}

fragment ProfileStats on ProfileStats {
  id
  followers
  following
  comments
  posts
  mirrors
  quotes
  mirrors
  quotes
  publications
  upvoteReactions: reactions(request: { type: UPVOTE })
  downvoteReactions: reactions(request: { type: DOWNVOTE })
  countOpenActions(request: $profileStatsCountOpenActionArgs)
}

# queries
query Profile(
  $request: ProfileRequest!
  # $profileCoverTransform: ImageTransform = {}
  # $profilePictureTransform: ImageTransform = {}
  $rateRequest: RateRequest = { for: USD }
) {
  result: profile(request: $request) {
    ...Profile
  }
}

query ProfileStats(
  $request: ProfileRequest!
  $profileStatsArg: ProfileStatsArg = {}
  $profileStatsCountOpenActionArgs: ProfileStatsCountOpenActionArgs = {}
) {
  result: profile(request: $request) {
    stats(request: $profileStatsArg) {
      ...ProfileStats
    }
  }
}

query Profiles(
  $request: ProfilesRequest!
  # $profileCoverTransform: ImageTransform = {}
  # $profilePictureTransform: ImageTransform = {}
  $rateRequest: RateRequest = { for: USD }
) {
  result: profiles(request: $request) {
    items {
      ...Profile
    }
    pageInfo {
      ...PaginatedResultInfo
    }
  }
}

query ProfileManagers($request: ProfileManagersRequest!) {
  result: profileManagers(request: $request) {
    items {
      ...ProfileManager
    }
    pageInfo {
      ...PaginatedResultInfo
    }
  }
}

query ProfileRecommendations(
  $request: ProfileRecommendationsRequest!
  $profileCoverTransform: ImageTransform = {}
  $profilePictureTransform: ImageTransform = {}
  $rateRequest: RateRequest = { for: USD }
) {
  result: profileRecommendations(request: $request) {
    items {
      ...Profile
    }
    pageInfo {
      ...PaginatedResultInfo
    }
  }
}

query Following(
  $request: FollowingRequest!
  $profileCoverTransform: ImageTransform = {}
  $profilePictureTransform: ImageTransform = {}
  $rateRequest: RateRequest = { for: USD }
) {
  result: following(request: $request) {
    items {
      ...Profile
    }
    pageInfo {
      ...PaginatedResultInfo
    }
  }
}

query Followers(
  $request: FollowersRequest!
  $profileCoverTransform: ImageTransform = {}
  $profilePictureTransform: ImageTransform = {}
  $rateRequest: RateRequest = { for: USD }
) {
  result: followers(request: $request) {
    items {
      ...Profile
    }
    pageInfo {
      ...PaginatedResultInfo
    }
  }
}

query MutualFollowers(
  $request: MutualFollowersRequest!
  $profileCoverTransform: ImageTransform = {}
  $profilePictureTransform: ImageTransform = {}
  $rateRequest: RateRequest = { for: USD }
) {
  result: mutualFollowers(request: $request) {
    items {
      ...Profile
    }
    pageInfo {
      ...PaginatedResultInfo
    }
  }
}

# mutations
mutation ClaimProfile($request: ClaimProfileRequest!) {
  result: claimProfile(request: $request) {
    ... on RelaySuccess {
      ...RelaySuccess
    }
    ... on CreateProfileWithHandleErrorResult {
      ...CreateProfileWithHandleErrorResult
    }
  }
}

mutation CreateProfileWithHandle($request: CreateProfileWithHandleRequest!) {
  result: createProfileWithHandle(request: $request) {
    ... on RelaySuccess {
      ...RelaySuccess
    }
    ... on CreateProfileWithHandleErrorResult {
      ...CreateProfileWithHandleErrorResult
    }
  }
}

mutation AddProfileInterests($request: ProfileInterestsRequest!) {
  result: addProfileInterests(request: $request)
}

mutation RemoveProfileInterests($request: ProfileInterestsRequest!) {
  result: removeProfileInterests(request: $request)
}

mutation SetProfileMetadata($request: OnchainSetProfileMetadataRequest!) {
  result: setProfileMetadata(request: $request) {
    ... on RelaySuccess {
      ...RelaySuccess
    }
    ... on LensProfileManagerRelayError {
      ...LensProfileManagerRelayError
    }
  }
}

mutation Block($request: BlockRequest!) {
  result: block(request: $request) {
    ... on RelaySuccess {
      ...RelaySuccess
    }
    ... on LensProfileManagerRelayError {
      ...LensProfileManagerRelayError
    }
  }
}

mutation Unblock($request: UnblockRequest!) {
  result: unblock(request: $request) {
    ... on RelaySuccess {
      ...RelaySuccess
    }
    ... on LensProfileManagerRelayError {
      ...LensProfileManagerRelayError
    }
  }
}

mutation Follow($request: FollowLensManagerRequest!) {
  result: follow(request: $request) {
    ... on RelaySuccess {
      ...RelaySuccess
    }
    ... on LensProfileManagerRelayError {
      ...LensProfileManagerRelayError
    }
  }
}

mutation Unfollow($request: UnfollowRequest!) {
  result: unfollow(request: $request) {
    ... on RelaySuccess {
      ...RelaySuccess
    }
    ... on LensProfileManagerRelayError {
      ...LensProfileManagerRelayError
    }
  }
}

mutation DismissRecommendedProfiles($request: DismissRecommendedProfilesRequest!) {
  result: dismissRecommendedProfiles(request: $request)
}

mutation CreateOnchainSetProfileMetadataTypedData(
  $request: OnchainSetProfileMetadataRequest!
  $options: TypedDataOptions
) {
  result: createOnchainSetProfileMetadataTypedData(request: $request, options: $options) {
    ...CreateOnchainSetProfileMetadataBroadcastItemResult
  }
}

mutation CreateChangeProfileManagersTypedData(
  $request: ChangeProfileManagersRequest!
  $options: TypedDataOptions
) {
  result: createChangeProfileManagersTypedData(request: $request, options: $options) {
    ...CreateChangeProfileManagersBroadcastItemResult
  }
}

mutation CreateBlockProfilesTypedData($request: BlockRequest!, $options: TypedDataOptions) {
  result: createBlockProfilesTypedData(request: $request, options: $options) {
    ...CreateBlockProfilesBroadcastItemResult
  }
}

mutation CreateUnblockProfilesTypedData($request: UnblockRequest!, $options: TypedDataOptions) {
  result: createUnblockProfilesTypedData(request: $request, options: $options) {
    ...CreateUnblockProfilesBroadcastItemResult
  }
}

mutation CreateFollowTypedData($request: FollowRequest!, $options: TypedDataOptions) {
  result: createFollowTypedData(request: $request, options: $options) {
    ...CreateFollowBroadcastItemResult
  }
}

mutation CreateUnfollowTypedData($request: UnfollowRequest!, $options: TypedDataOptions) {
  result: createUnfollowTypedData(request: $request, options: $options) {
    ...CreateUnfollowBroadcastItemResult
  }
}

mutation SetFollowModule($request: SetFollowModuleRequest!) {
  result: setFollowModule(request: $request) {
    ... on RelaySuccess {
      ...RelaySuccess
    }
    ... on LensProfileManagerRelayError {
      ...LensProfileManagerRelayError
    }
  }
}

mutation CreateSetFollowModuleTypedData(
  $request: SetFollowModuleRequest!
  $options: TypedDataOptions
) {
  result: createSetFollowModuleTypedData(request: $request, options: $options) {
    ...CreateSetFollowModuleBroadcastItemResult
  }
}

mutation HandleLinkToProfile($request: HandleLinkToProfileRequest!) {
  result: handleLinkToProfile(request: $request) {
    ... on RelaySuccess {
      ...RelaySuccess
    }
    ... on LensProfileManagerRelayError {
      ...LensProfileManagerRelayError
    }
  }
}

mutation HandleUnlinkFromProfile($request: HandleUnlinkFromProfileRequest!) {
  result: handleUnlinkFromProfile(request: $request) {
    ... on RelaySuccess {
      ...RelaySuccess
    }
    ... on LensProfileManagerRelayError {
      ...LensProfileManagerRelayError
    }
  }
}

fragment CreateHandleLinkToProfileBroadcastItemResult on CreateHandleLinkToProfileBroadcastItemResult {
  id
  expiresAt
  typedData {
    types {
      Link {
        ...EIP712TypedDataField
      }
    }
    domain {
      ...EIP712TypedDataDomain
    }
    value {
      nonce
      deadline
      profileId
      handleId
    }
  }
}

mutation CreateHandleLinkToProfileTypedData($request: HandleLinkToProfileRequest!) {
  result: createHandleLinkToProfileTypedData(request: $request) {
    ...CreateHandleLinkToProfileBroadcastItemResult
  }
}

fragment CreateHandleUnlinkFromProfileBroadcastItemResult on CreateHandleUnlinkFromProfileBroadcastItemResult {
  id
  expiresAt
  typedData {
    types {
      Unlink {
        ...EIP712TypedDataField
      }
    }
    domain {
      ...EIP712TypedDataDomain
    }
    value {
      nonce
      deadline
      profileId
      handleId
    }
  }
}

mutation CreateHandleUnlinkFromProfileTypedData($request: HandleUnlinkFromProfileRequest!) {
  result: createHandleUnlinkFromProfileTypedData(request: $request) {
    ...CreateHandleUnlinkFromProfileBroadcastItemResult
  }
}

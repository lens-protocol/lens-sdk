fragment ModuleInfo on ModuleInfo {
  name
  type
}

fragment KnownSupportedModule on KnownSupportedModule {
  moduleName
  contract {
    ...NetworkAddress
  }
  moduleInput {
    ...ModuleInfo
  }
  redeemInput {
    ...ModuleInfo
  }
  returnDataInput {
    ...ModuleInfo
  }
}

fragment UnknownSupportedModule on UnknownSupportedModule {
  moduleName
  contract {
    ...NetworkAddress
  }
}

fragment ApprovedAllowanceAmountResult on ApprovedAllowanceAmountResult {
  moduleName
  moduleContract {
    ...NetworkAddress
  }
  allowance {
    ...Amount
  }
}

fragment GenerateModuleCurrencyApprovalResult on GenerateModuleCurrencyApprovalResult {
  to
  from
  data
}

query Currencies($request: PaginatedOffsetRequest!) {
  result: currencies(request: $request) {
    items {
      ...Erc20
    }
    pageInfo {
      ...PaginatedResultInfo
    }
  }
}

query ApprovedModuleAllowanceAmount(
  $request: ApprovedModuleAllowanceAmountRequest!
  $rateRequest: RateRequest!
) {
  result: approvedModuleAllowanceAmount(request: $request) {
    ... on ApprovedAllowanceAmountResult {
      ...ApprovedAllowanceAmountResult
    }
  }
}

query GenerateModuleCurrencyApprovalData($request: GenerateModuleCurrencyApprovalDataRequest!) {
  result: generateModuleCurrencyApprovalData(request: $request) {
    ... on GenerateModuleCurrencyApprovalResult {
      ...GenerateModuleCurrencyApprovalResult
    }
  }
}

query SupportedFollowModules($request: SupportedModulesRequest!) {
  result: supportedFollowModules(request: $request) {
    items {
      ... on KnownSupportedModule {
        ...KnownSupportedModule
      }
      ... on UnknownSupportedModule {
        ...UnknownSupportedModule
      }
    }
    pageInfo {
      ...PaginatedResultInfo
    }
  }
}

query SupportedReferenceModules($request: SupportedModulesRequest!) {
  result: supportedReferenceModules(request: $request) {
    items {
      ... on KnownSupportedModule {
        ...KnownSupportedModule
      }
      ... on UnknownSupportedModule {
        ...UnknownSupportedModule
      }
    }
    pageInfo {
      ...PaginatedResultInfo
    }
  }
}

query SupportedOpenActionModules($request: SupportedModulesRequest!) {
  result: supportedOpenActionModules(request: $request) {
    items {
      ... on KnownSupportedModule {
        ...KnownSupportedModule
      }
      ... on UnknownSupportedModule {
        ...UnknownSupportedModule
      }
    }
    pageInfo {
      ...PaginatedResultInfo
    }
  }
}

query SupportedOpenActionCollectModules($request: SupportedModulesRequest!) {
  result: supportedOpenActionCollectModules(request: $request) {
    items {
      ... on KnownSupportedModule {
        ...KnownSupportedModule
      }
      ... on UnknownSupportedModule {
        ...UnknownSupportedModule
      }
    }
    pageInfo {
      ...PaginatedResultInfo
    }
  }
}

fragment ModuleMetadataResult on GetModuleMetadataResult {
  metadata {
    attributes {
      type
      key
      value
    }
    authors
    description
    initializeCalldataABI
    initializeResultDataABI
    name
    processCalldataABI
    title
  }
  moduleType
  signlessApproved
  sponsoredApproved
  verified
}

query ModuleMetadata($request: ModuleMetadataRequest!) {
  result: moduleMetadata(request: $request) {
    ...ModuleMetadataResult
  }
}

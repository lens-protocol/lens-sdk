fragment FeeFollowModuleSettings on FeeFollowModuleSettings {
  __typename
  amount {
    ...ModuleFeeAmount
  }
  contractAddress
  recipient
}

fragment ProfileFollowModuleSettings on ProfileFollowModuleSettings {
  __typename
  contractAddress
}

fragment RevertFollowModuleSettings on RevertFollowModuleSettings {
  __typename
  contractAddress
}

fragment UnknownFollowModuleSettings on UnknownFollowModuleSettings {
  __typename
  contractAddress
}

fragment Attribute on Attribute {
  __typename
  displayType
  key
  value
}

fragment Profile on Profile {
  __typename
  id
  name
  bio
  handle
  ownedBy
  interests

  picture {
    ... on NftImage {
      __typename
      contractAddress
      tokenId
      uri
      verified
    }

    ... on MediaSet {
      ...MediaSet
    }
  }

  coverPicture {
    ... on NftImage {
      __typename
      contractAddress
      tokenId
      uri
      verified
    }

    ... on MediaSet {
      ...MediaSet
    }
  }

  stats {
    __typename
    totalFollowers
    totalFollowing
    totalPosts
  }

  followModule {
    ... on FeeFollowModuleSettings {
      ...FeeFollowModuleSettings
    }
    ... on ProfileFollowModuleSettings {
      ...ProfileFollowModuleSettings
    }
    ... on RevertFollowModuleSettings {
      ...RevertFollowModuleSettings
    }
    ... on UnknownFollowModuleSettings {
      ...UnknownFollowModuleSettings
    }
  }

  attributes {
    ...Attribute
  }

  dispatcher {
    address
    canUseRelay
  }

  isDefault
  isFollowedByMe(isFinalisedOnChain: true)
  isFollowing(who: $observerId)
}

fragment EIP712TypedDataDomain on EIP712TypedDataDomain {
  name
  chainId
  version
  verifyingContract
}

fragment Erc20 on Erc20 {
  __typename
  name
  symbol
  decimals
  address
}

fragment Erc20Amount on Erc20Amount {
  __typename
  asset {
    ...Erc20
  }
  value
}

fragment ModuleFeeAmount on ModuleFeeAmount {
  __typename
  asset {
    ...Erc20
  }
  value
}

fragment FreeCollectModuleSettings on FreeCollectModuleSettings {
  __typename
  contractAddress
  followerOnly
}

fragment FeeCollectModuleSettings on FeeCollectModuleSettings {
  __typename
  amount {
    ...ModuleFeeAmount
  }
  contractAddress
  followerOnly
  recipient
  referralFee
}

fragment LimitedFeeCollectModuleSettings on LimitedFeeCollectModuleSettings {
  __typename
  amount {
    ...ModuleFeeAmount
  }
  collectLimit
  contractAddress
  followerOnly
  recipient
  referralFee
}

fragment LimitedTimedFeeCollectModuleSettings on LimitedTimedFeeCollectModuleSettings {
  __typename
  amount {
    ...ModuleFeeAmount
  }
  collectLimit
  contractAddress
  followerOnly
  endTimestamp
  recipient
  referralFee
}

fragment RevertCollectModuleSettings on RevertCollectModuleSettings {
  __typename
  contractAddress
}

fragment TimedFeeCollectModuleSettings on TimedFeeCollectModuleSettings {
  __typename
  amount {
    ...ModuleFeeAmount
  }
  contractAddress
  followerOnly
  endTimestamp
  recipient
  referralFee
}

fragment MultirecipientFeeCollectModuleSettings on MultirecipientFeeCollectModuleSettings {
  __typename
  amount {
    ...ModuleFeeAmount
  }
  collectLimitOptional: collectLimit
  contractAddress
  followerOnly
  endTimestampOptional: endTimestamp
  recipients {
    recipient
    split
  }
  referralFee
}

fragment ERC4626FeeCollectModuleSettings on ERC4626FeeCollectModuleSettings {
  __typename
  amount {
    ...ModuleFeeAmount
  }
  collectLimitOptional: collectLimit
  contractAddress
  followerOnly
  endTimestampOptional: endTimestamp
  recipient
  referralFee
  vault
}

fragment AaveFeeCollectModuleSettings on AaveFeeCollectModuleSettings {
  __typename
  amount {
    ...ModuleFeeAmount
  }
  collectLimitOptional: collectLimit
  contractAddress
  followerOnly
  endTimestampOptional: endTimestamp
  recipient
  referralFee
}

fragment SimpleCollectModuleSettings on SimpleCollectModuleSettings {
  __typename
  contractAddress
  followerOnly
  feeOptional: fee {
    amount {
      ...ModuleFeeAmount
    }
    referralFee
    recipient
  }
  collectLimitOptional: collectLimit
  endTimestampOptional: endTimestamp
}

fragment Wallet on Wallet {
  __typename
  address
  defaultProfile {
    ...Profile
  }
}

fragment Media on Media {
  __typename
  altTag
  cover
  mimeType
  url
}

fragment MediaSet on MediaSet {
  __typename
  original {
    ...Media
  }
}

fragment Metadata on MetadataOutput {
  __typename
  animatedUrl
  content
  contentWarning
  description
  image
  locale
  mainContentFocus
  name
  media {
    ...MediaSet
  }
  attributes {
    ...MetadataAttributeOutput
  }
  tags
}

fragment MetadataAttributeOutput on MetadataAttributeOutput {
  __typename
  traitType
  value
}

fragment SimplePublicationStats on PublicationStats {
  __typename
  totalAmountOfMirrors
  totalAmountOfCollects
  totalAmountOfComments
  totalUpvotes
  totalDownvotes
}

fragment MirrorBase on Mirror {
  __typename
  id
  createdAt
  isDataAvailability
  dataAvailabilityProofs
  profile {
    ...Profile
  }
  hidden
}

fragment Mirror on Mirror {
  __typename
  ...MirrorBase
  mirrorOf {
    ... on Post {
      ...Post
    }

    ... on Comment {
      ...Comment
    }
  }
}

fragment CommentBase on Comment {
  __typename
  id
  stats {
    ...SimplePublicationStats
  }
  metadata {
    ...Metadata
  }
  profile {
    ...Profile
  }
  collectedBy {
    ...Wallet
  }
  collectModule {
    __typename
    ... on FreeCollectModuleSettings {
      ...FreeCollectModuleSettings
    }
    ... on FeeCollectModuleSettings {
      ...FeeCollectModuleSettings
    }
    ... on LimitedFeeCollectModuleSettings {
      ...LimitedFeeCollectModuleSettings
    }
    ... on LimitedTimedFeeCollectModuleSettings {
      ...LimitedTimedFeeCollectModuleSettings
    }
    ... on RevertCollectModuleSettings {
      ...RevertCollectModuleSettings
    }
    ... on TimedFeeCollectModuleSettings {
      ...TimedFeeCollectModuleSettings
    }
    ... on MultirecipientFeeCollectModuleSettings {
      ...MultirecipientFeeCollectModuleSettings
    }
    ... on ERC4626FeeCollectModuleSettings {
      ...ERC4626FeeCollectModuleSettings
    }
    ... on AaveFeeCollectModuleSettings {
      ...AaveFeeCollectModuleSettings
    }
    ... on SimpleCollectModuleSettings {
      ...SimpleCollectModuleSettings
    }
  }
  referenceModule {
    __typename
    ... on FollowOnlyReferenceModuleSettings {
      contractAddress
    }
  }
  collectNftAddress
  createdAt
  hidden
  isGated
  isDataAvailability
  dataAvailabilityProofs
  reaction(request: { profileId: $observerId })
  hasCollectedByMe(isFinalisedOnChain: true)
  canComment(profileId: $observerId) {
    result
  }
  canMirror(profileId: $observerId) {
    result
  }
  mirrors(by: $observerId)
}

fragment Comment on Comment {
  __typename
  ...CommentBase
  commentOn {
    ... on Post {
      ...Post
    }

    ... on Mirror {
      ...MirrorBase
    }

    ... on Comment {
      ...CommentBase
    }
  }
  mainPost {
    ... on Post {
      ...Post
    }

    ... on Mirror {
      ...MirrorBase
    }
  }
}

fragment Post on Post {
  __typename
  id
  stats {
    ...SimplePublicationStats
  }
  metadata {
    ...Metadata
  }
  profile {
    ...Profile
  }
  collectedBy {
    ...Wallet
  }
  collectModule {
    __typename
    ... on FreeCollectModuleSettings {
      ...FreeCollectModuleSettings
    }
    ... on FeeCollectModuleSettings {
      ...FeeCollectModuleSettings
    }
    ... on LimitedFeeCollectModuleSettings {
      ...LimitedFeeCollectModuleSettings
    }
    ... on LimitedTimedFeeCollectModuleSettings {
      ...LimitedTimedFeeCollectModuleSettings
    }
    ... on RevertCollectModuleSettings {
      ...RevertCollectModuleSettings
    }
    ... on TimedFeeCollectModuleSettings {
      ...TimedFeeCollectModuleSettings
    }
    ... on MultirecipientFeeCollectModuleSettings {
      ...MultirecipientFeeCollectModuleSettings
    }
    ... on ERC4626FeeCollectModuleSettings {
      ...ERC4626FeeCollectModuleSettings
    }
    ... on AaveFeeCollectModuleSettings {
      ...AaveFeeCollectModuleSettings
    }
    ... on SimpleCollectModuleSettings {
      ...SimpleCollectModuleSettings
    }
  }
  referenceModule {
    __typename
    ... on FollowOnlyReferenceModuleSettings {
      contractAddress
    }
  }
  collectNftAddress
  createdAt
  hidden
  isGated
  isDataAvailability
  dataAvailabilityProofs
  reaction(request: { profileId: $observerId })
  hasCollectedByMe(isFinalisedOnChain: true)
  canComment(profileId: $observerId) {
    result
  }
  canMirror(profileId: $observerId) {
    result
  }
  mirrors(by: $observerId)
}

fragment CommonPaginatedResultInfo on PaginatedResultInfo {
  __typename
  prev
  next
  totalCount
}

fragment Following on Following {
  __typename
  profile {
    ...Profile
  }
}

fragment Follower on Follower {
  __typename
  wallet {
    ...Wallet
  }
}

fragment RelayerResult on RelayerResult {
  __typename
  txHash
  txId
}

fragment RelayError on RelayError {
  __typename
  reason
}

fragment CreateDataAvailabilityPublicationResult on CreateDataAvailabilityPublicationResult {
  __typename
  id
  proofs
  dataAvailabilityId
}

fragment NftOwnershipOutput on NftOwnershipOutput {
  __typename
  contractAddress
  chainID
  contractType
  tokenIds
}

fragment Erc20OwnershipOutput on Erc20OwnershipOutput {
  __typename
  amount
  chainID
  condition
  contractAddress
  decimals
  name
  symbol
}

fragment EoaOwnershipOutput on EoaOwnershipOutput {
  __typename
  address
}

fragment ProfileOwnershipOutput on ProfileOwnershipOutput {
  __typename
  profileId
}

fragment FollowConditionOutput on FollowConditionOutput {
  __typename
  profileId
}

fragment CollectConditionOutput on CollectConditionOutput {
  __typename
  publicationId
  thisPublication
}

fragment LeafConditionOutput on AccessConditionOutput {
  __typename
  nft {
    ...NftOwnershipOutput
  }

  token {
    ...Erc20OwnershipOutput
  }

  eoa {
    ...EoaOwnershipOutput
  }

  profile {
    ...ProfileOwnershipOutput
  }

  follow {
    ...FollowConditionOutput
  }

  collect {
    ...CollectConditionOutput
  }
}

fragment OrConditionOutput on OrConditionOutput {
  __typename
  criteria {
    ...LeafConditionOutput
  }
}
fragment AndConditionOutput on AndConditionOutput {
  __typename
  criteria {
    ...LeafConditionOutput
  }
}

fragment AnyConditionOutput on AccessConditionOutput {
  __typename
  ...LeafConditionOutput

  or {
    ...OrConditionOutput
  }

  and {
    ...AndConditionOutput
  }
}

fragment RootConditionOutput on AccessConditionOutput {
  __typename
  or {
    criteria {
      ...AnyConditionOutput
    }
  }
}

fragment EncryptedMedia on EncryptedMedia {
  __typename
  altTag
  cover
  mimeType
  url
}

fragment EncryptedMediaSet on EncryptedMediaSet {
  __typename
  original {
    ...EncryptedMedia
  }
}

fragment EncryptedFieldsOutput on EncryptedFieldsOutput {
  __typename
  animation_url
  content
  external_url
  image
  media {
    original {
      ...EncryptedMedia
    }
  }
}

fragment EncryptionParamsOutput on EncryptionParamsOutput {
  __typename
  accessCondition {
    ...RootConditionOutput
  }
  encryptionProvider
  encryptedFields {
    ...EncryptedFieldsOutput
  }
  providerSpecificParams {
    encryptionKey
  }
}
